---
- name: Create
  hosts: localhost
  gather_facts: false
  vars:
    molecule_inventory:
      all:
        hosts: {}
        molecule: {}
  tasks:
    - name: Create a container
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
        command: sleep 1d
        log_driver: json-file
      register: container_result
      loop: "{{ molecule_yml.platforms }}"

    - name: Print container info
      ansible.builtin.debug:
        msg: "{{ container_result.results }}"

    - name: Add container to molecule_inventory
      vars:
        inventory_partial_yaml: |
          all:
            children:
              molecule:
                hosts:
                  "{{ item.name }}":
                    ansible_connection: community.docker.docker
      ansible.builtin.set_fact:
        molecule_inventory: >
          {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}
      loop: "{{ molecule_yml.platforms }}"
      loop_control:
        label: "{{ item.name }}" # display the container name only https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html#limiting-loop-output-with-label

    - name: Dump molecule_inventory
      ansible.builtin.copy:
        content: |
          {{ molecule_inventory | to_yaml }}
        dest: "{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        mode: "0600"

    - name: Refresh inventory to ensure new instances exist in inventory # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/meta_module.html
      ansible.builtin.meta: refresh_inventory

    - name: Fail if molecule group is missing
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}
      run_once: true # noqa: run-once[task]

# we want to avoid errors like "Failed to create temporary directory"
- name: Validate that inventory was refreshed
  hosts: molecule
  gather_facts: false
  tasks:
    - name: Check container OS
      ansible.builtin.raw: grep NAME /etc/*-release | grep PRETTY_NAME
      register: container_os_result
      changed_when: false

    - name: Display uname info
      ansible.builtin.debug:
        msg: "{{ container_os_result.stdout }}"


# - name: Create
#   hosts: localhost
#   connection: local
#   gather_facts: false
#   # no_log: "{{ molecule_no_log }}"
#   tasks:

#     # TODO: Developer must implement and populate 'server' variable

#     - name: Create instance config
#       when: server.changed | default(false) | bool  # noqa no-handler
#       block:
#         - name: Populate instance config dict  # noqa jinja
#           ansible.builtin.set_fact:
#             instance_conf_dict: {}
#             # instance': "{{ }}",
#             # address': "{{ }}",
#             # user': "{{ }}",
#             # port': "{{ }}",
#             # 'identity_file': "{{ }}", }
#           with_items: "{{ server.results }}"
#           register: instance_config_dict

#         - name: Convert instance config dict to a list
#           ansible.builtin.set_fact:
#             instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"

#         - name: Dump instance config
#           ansible.builtin.copy:
#             content: |
#               # Molecule managed

#               {{ instance_conf | to_json | from_json | to_yaml }}
#             dest: "{{ molecule_instance_config }}"
#             mode: 0600
